[{"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/reportWebVitals.js":"1","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/App.js":"2"},{"size":362,"mtime":1611269836919,"results":"3","hashOfConfig":"4"},{"size":4471,"mtime":1611279789732,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qqc9lw",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/reportWebVitals.js",[],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/App.js",["11","12","13"],"import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nlet defaultTextColor = \"#fff\";\n\nlet defaultStyle = {\n    color: defaultTextColor,\n};\n\nlet fakeServerData = {\n    user: {\n        name: \"Umar\",\n        playlists: [\n            {\n                name: \"My favorites\",\n                songs: [\n                    { name: \"Beat It\", duration: 1345 },\n                    { name: \"Cannelloni Makaroni\", duration: 1236 },\n                    { name: \"Rosa helikopter\", duration: 70000 },\n                ],\n            },\n            {\n                name: \"Discover Weekly\",\n                songs: [\n                    { name: \"Beat It\", duration: 1345 },\n                    { name: \"Cannelloni Makaroni\", duration: 1236 },\n                    { name: \"Rosa helikopter\", duration: 70000 },\n                ],\n            },\n            {\n                name: \"Another playlist - the best!\",\n                songs: [\n                    { name: \"Beat It\", duration: 1345 },\n                    { name: \"Cannelloni Makaroni\", duration: 1236 },\n                    { name: \"Rosa helikopter\", duration: 70000 },\n                ],\n            },\n            {\n                name: \"Playlist - yeah!\",\n                songs: [\n                    { name: \"Beat It\", duration: 1345 },\n                    { name: \"Cannelloni Makaroni\", duration: 1236 },\n                    { name: \"Rosa helikopter\", duration: 70000 },\n                ],\n            },\n        ],\n    },\n};\n\nclass PlaylistCounter extends Component {\n    render() {\n        return (\n            <div\n                style={{\n                    ...defaultStyle,\n                    width: \"40%\",\n                    display: \"inline-block\",\n                }}\n            >\n                <h2 style={{ color: \"#fff\" }}>\n                    {this.props.playlists.length} Playlists\n                </h2>\n            </div>\n        );\n    }\n}\n\nclass HoursCounter extends Component {\n    render() {\n        let allSongs = this.props.playlists.reduce((songs, eachPlaylist) => {\n            return songs.concat(eachPlaylist.songs);\n        }, []);\n\n        let totalDuration = allSongs.reduce((sum, eachSong) => {\n            return sum + eachSong.duration;\n        }, 0);\n\n        return (\n            <div\n                style={{\n                    ...defaultStyle,\n                    width: \"40%\",\n                    display: \"inline-block\",\n                }}\n            >\n                <h2 style={{ color: \"#fff\" }}>\n                    {Math.floor(totalDuration / 60)} Hours\n                </h2>\n            </div>\n        );\n    }\n}\n\nclass Filter extends Component {\n    render() {\n        return (\n            <div style={defaultStyle}>\n                <img />\n                <input type=\"text\" />\n            </div>\n        );\n    }\n}\n\nclass Playlist extends Component {\n    render() {\n        return (\n            <div\n                style={{\n                    ...defaultStyle,\n                    width: \"25%\",\n                    display: \"inline-block\",\n                }}\n            >\n                <img />\n                <h3>Playlist Name</h3>\n                <ul>\n                    <li>Song 1</li>\n                    <li>Song 2</li>\n                    <li>Song 3</li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = { serverData: {} };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({ serverData: fakeServerData });\n        }, 1000);\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.serverData.user ? (\n                    <div>\n                        <h1>{this.state.serverData.user.name}'s playlists</h1>\n                        <PlaylistCounter\n                            playlists={this.state.serverData.user.playlists}\n                        />\n                        <HoursCounter\n                            playlists={this.state.serverData.user.playlists}\n                        />\n                        <Filter />\n                        <Playlist />\n                        <Playlist />\n                        <Playlist />\n                        <Playlist />\n                    </div>\n                ) : (\n                    <h1>Loading...</h1>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":1,"column":8,"nodeType":"16","messageId":"17","endLine":1,"endColumn":12},{"ruleId":"18","severity":1,"message":"19","line":98,"column":17,"nodeType":"20","endLine":98,"endColumn":24},{"ruleId":"18","severity":1,"message":"19","line":115,"column":17,"nodeType":"20","endLine":115,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]