[{"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/reportWebVitals.js":"1","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/App.js":"2","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/index.js":"3"},{"size":362,"mtime":1611269836919,"results":"4","hashOfConfig":"5"},{"size":5205,"mtime":1611283541158,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1611269836918,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qqc9lw",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/reportWebVitals.js",[],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/App.js",["15","16"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nlet defaultTextColor = \"#fff\";\n\nlet defaultStyle = {\n    color: defaultTextColor,\n};\n\nlet fakeServerData = {\n    user: {\n        name: \"Umar\",\n        playlists: [\n            {\n                name: \"My favorites\",\n                songs: [\n                    { name: \"Beat It\", duration: 1345 },\n                    { name: \"Cannelloni Makaroni\", duration: 1236 },\n                    { name: \"Rosa helikopter\", duration: 70000 },\n                ],\n            },\n            {\n                name: \"Discover Weekly\",\n                songs: [\n                    { name: \"Beat It\", duration: 1345 },\n                    { name: \"Cannelloni Makaroni\", duration: 1236 },\n                    { name: \"Rosa helikopter\", duration: 70000 },\n                ],\n            },\n            {\n                name: \"Another playlist - the best!\",\n                songs: [\n                    { name: \"Beat It\", duration: 1345 },\n                    { name: \"Hallelujah\", duration: 1236 },\n                    { name: \"Rosa helikopter\", duration: 70000 },\n                ],\n            },\n            {\n                name: \"Playlist - yeah!\",\n                songs: [\n                    { name: \"Beat It\", duration: 1345 },\n                    { name: \"Cannelloni Makaroni\", duration: 1236 },\n                    { name: \"Hej Hej Monika\", duration: 70000 },\n                ],\n            },\n        ],\n    },\n};\n\nclass PlaylistCounter extends Component {\n    render() {\n        return (\n            <div\n                style={{\n                    ...defaultStyle,\n                    width: \"40%\",\n                    display: \"inline-block\",\n                }}\n            >\n                <h2 style={{ color: \"#fff\" }}>\n                    {this.props.playlists.length} Playlists\n                </h2>\n            </div>\n        );\n    }\n}\n\nclass HoursCounter extends Component {\n    render() {\n        let songs = this.props.playlists.reduce((songs, playlist) => {\n            return songs.concat(playlist.songs);\n        }, []);\n        let totalDuration = songs.reduce((sum, song) => {\n            return sum + song.duration;\n        }, 0);\n        return (\n            <div\n                style={{\n                    ...defaultStyle,\n                    width: \"40%\",\n                    display: \"inline-block\",\n                }}\n            >\n                <h2 style={{ color: \"#fff\" }}>\n                    {Math.floor(totalDuration / 60)} Hours\n                </h2>\n            </div>\n        );\n    }\n}\n\nclass Filter extends Component {\n    render() {\n        return (\n            <div style={defaultStyle}>\n                <img />\n                <input\n                    type=\"text\"\n                    onKeyUp={(event) =>\n                        this.props.onTextChange(event.target.value)\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nclass Playlist extends Component {\n    render() {\n        return (\n            <div\n                style={{\n                    ...defaultStyle,\n                    width: \"25%\",\n                    display: \"inline-block\",\n                }}\n            >\n                <img />\n                <h3>{this.props.playlist.name}</h3>\n                <ul>\n                    {this.props.playlist.songs.map((song) => (\n                        <li> {song.name} </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = { serverData: {}, filterString: \"\" };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({ serverData: fakeServerData });\n        }, 1000);\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.serverData.user ? (\n                    <div>\n                        <h1>{this.state.serverData.user.name}'s playlists</h1>\n                        <PlaylistCounter\n                            playlists={this.state.serverData.user.playlists}\n                        />\n                        <HoursCounter\n                            playlists={this.state.serverData.user.playlists}\n                        />\n                        <Filter\n                            onTextChange={(text) =>\n                                this.setState({ filterString: text })\n                            }\n                        />\n                        {this.state.serverData.user.playlists\n                            .filter((playlist) =>\n                                playlist.name\n                                    .toLowerCase()\n                                    .includes(\n                                        this.state.filterString.toLowerCase()\n                                    )\n                            )\n                            .map((playlist) => (\n                                <Playlist playlist={playlist} />\n                            ))}\n                    </div>\n                ) : (\n                    <h1>Loading...</h1>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/index.js",[],{"ruleId":"17","severity":1,"message":"18","line":95,"column":17,"nodeType":"19","endLine":95,"endColumn":24},{"ruleId":"17","severity":1,"message":"18","line":117,"column":17,"nodeType":"19","endLine":117,"endColumn":24},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]