[{"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/PlaylistPage.js":"1","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/App.js":"2","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/Playlist.js":"3","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/Filter.js":"4","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/HoursCounter.js":"5","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/PlaylistCounter.js":"6","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/HomePage.js":"7","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/Nav.js":"8","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/AboutPage.js":"9","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/TopPage.js":"10","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/LoginButton.js":"11","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/ComparisonPage.js":"12","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/CompareButton.js":"13"},{"size":7200,"mtime":1611651406513,"results":"14","hashOfConfig":"15"},{"size":5404,"mtime":1612208348433,"results":"16","hashOfConfig":"15"},{"size":938,"mtime":1611635695513,"results":"17","hashOfConfig":"15"},{"size":518,"mtime":1611425283924,"results":"18","hashOfConfig":"15"},{"size":1122,"mtime":1611425128036,"results":"19","hashOfConfig":"15"},{"size":590,"mtime":1611425052184,"results":"20","hashOfConfig":"15"},{"size":324,"mtime":1611651482497,"results":"21","hashOfConfig":"15"},{"size":880,"mtime":1612207418930,"results":"22","hashOfConfig":"15"},{"size":145,"mtime":1611549618842,"results":"23","hashOfConfig":"15"},{"size":7409,"mtime":1611656942920,"results":"24","hashOfConfig":"15"},{"size":729,"mtime":1611651365477,"results":"25","hashOfConfig":"15"},{"size":7636,"mtime":1612212410375,"results":"26","hashOfConfig":"15"},{"size":1024,"mtime":1612224024210,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qqc9lw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/PlaylistPage.js",[],["61","62"],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/App.js",["63"],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/Playlist.js",["64"],"import React, { Component } from \"react\";\nlet defaultTextColor = \"#fff\";\nlet defaultStyle = {\n    color: defaultTextColor,\n};\nclass Playlist extends Component {\n    render() {\n        return (\n            <div\n                style={{\n                    ...defaultStyle,\n                    width: \"25%\",\n                    textAlign: \"center\",\n                }}\n            >\n                <img\n                    src={this.props.playlist.imageUrl}\n                    style={{\n                        padding: \"20px\",\n                        width: \"300px\",\n                    }}\n                />\n                <h2>{this.props.playlist.name}</h2>\n                <ul className=\"playlist-info\">\n                    {this.props.playlist.songs.slice(0, 3).map((song) => (\n                        <li> {song.name} </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\nexport default Playlist;\n","/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/Filter.js",["65"],"import React, { Component } from \"react\";\nlet defaultTextColor = \"#fff\";\nlet defaultStyle = {\n    color: defaultTextColor,\n};\nclass Filter extends Component {\n    render() {\n        return (\n            <div style={defaultStyle}>\n                <img />\n                <input\n                    type=\"text\"\n                    onKeyUp={(event) =>\n                        this.props.onTextChange(event.target.value)\n                    }\n                />\n            </div>\n        );\n    }\n}\nexport default Filter;",["66","67"],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/HoursCounter.js",[],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/PlaylistCounter.js",[],["68","69"],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/HomePage.js",[],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/Nav.js",["70"],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/AboutPage.js",[],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/TopPage.js",["71","72","73","74","75","76"],"import React, { Component, Fragment } from \"react\";\nimport queryString from \"query-string\";\nimport \"./../App.css\";\nimport LoginButton from \"./../Components/LoginButton\";\n\nimport Playlist from \"./../Components/Playlist\";\nimport PlaylistCounter from \"./../Components/PlaylistCounter\";\nimport HoursCounter from \"./../Components/HoursCounter\";\nimport Filter from \"./../Components/Filter\";\n\nclass TopPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            top_artists: [],\n        };\n    }\n\n    fetchUserData(accessToken) {\n        if (this.props.user === null) {\n            // console.log(`no user data from app yet`);\n        } else {\n            // console.log(`top page got user data from app`);\n            this.setState({\n                user: {\n                    name: this.props.user.name,\n                },\n            });\n            return;\n        }\n\n        fetch(\"https://api.spotify.com/v1/me\", {\n            headers: { Authorization: \"Bearer \" + accessToken },\n        })\n            .then((response) => response.json())\n            .then((data) =>\n                this.setState(\n                    {\n                        user: {\n                            name: data.display_name,\n                        },\n                    },\n                    () => console.log(`api called for user data`)\n                )\n            );\n    }\n\n    fetchTopArtists(accessToken) {\n        if (this.props.artistData === null) {\n            // console.log(`no artist data from app yet`);\n        } else {\n            // console.log(`top page got artist data from app`);\n            this.setState({\n                top_artists: this.props.artistData,\n            });\n            return;\n        }\n\n        fetch(\"https://api.spotify.com/v1/me/top/artists\", {\n            headers: { Authorization: \"Bearer \" + accessToken },\n        })\n            .then((response) => response.json())\n            .then((artistsData) => {\n                let data = artistsData.items.map((artist) => {\n                    return {\n                        name: artist.name,\n                        imageUrl: artist.images[0].url,\n                        genres: artist.genres,\n                    };\n                });\n\n                this.setState({\n                    top_artists: data,\n                });\n                console.log(`api called for artist data`);\n                this.props.sendArtistData(data);\n            });\n    }\n\n    componentDidMount() {\n        this.setState({ isLogged: this.props.isLogged });\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = this.props.accessToken || parsed.access_token;\n        if (!accessToken) {\n            console.log(`trying to access top page but no access token`);\n            return;\n        }\n        this.props.login();\n        this.fetchTopArtists(accessToken);\n        this.fetchUserData(accessToken);\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.isLogged ? (\n                    this.state.user && (\n                        <div className=\"top-page\">\n                            <h1></h1>\n                            <h1\n                                style={{\n                                    fontSize: \"140px\",\n                                    textAlign: \"left\",\n                                    marginLeft: \"2%\",\n                                    marginTop: \"-1px\",\n                                }}\n                            >\n                                The artists you listened to the most\n                            </h1>\n                            {this.state.top_artists.map((artist) => (\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        marginTop: \"100px\",\n                                        marginLeft: \"50px\",\n                                    }}\n                                >\n                                    <img\n                                        style={{\n                                            padding: \"20px\",\n                                            width: \"400px\",\n                                        }}\n                                        src={artist.imageUrl}\n                                    />\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            \"flex-direction\": \"column\",\n                                        }}\n                                    >\n                                        <h1\n                                            className=\"big-font\"\n                                            style={{\n                                                marginLeft: \"-1px\",\n                                                marginTop: \"-0.5%\",\n                                                fontSize: \"120px\",\n                                            }}\n                                        >\n                                            {artist.name}\n                                        </h1>\n\n                                        <div\n                                            style={{\n                                                display: \"flex\",\n                                                \"flex-direction\": \"row\",\n                                                \"flex-wrap\": \"wrap\",\n                                                alignItems: \"center\",\n                                                padding: \"20px\",\n                                                marginLeft: \"-15px\",\n                                            }}\n                                        >\n                                            {artist.genres\n                                                .slice(0, 1)\n                                                .map((genere) => (\n                                                    <h2\n                                                        style={{\n                                                            \"margin-top\":\n                                                                \"-150px\",\n                                                            \"margin-right\":\n                                                                \"20px\",\n                                                            color: \"#ff6050\",\n                                                        }}\n                                                    >\n                                                        {genere}\n                                                    </h2>\n                                                ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )\n                ) : (\n                    <Fragment>\n                        <h1 className=\"big-font\">\n                            Let's get you signed in first\n                        </h1>\n                        <LoginButton />\n                    </Fragment>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default TopPage;\n",["77","78"],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/LoginButton.js",[],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Pages/ComparisonPage.js",["79"],"/Users/umar-mohammad/code/react-spotify/SpotifyPlaylistsDisplay/src/Components/CompareButton.js",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":16,"column":17,"nodeType":"92","endLine":22,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":10,"column":17,"nodeType":"92","endLine":10,"endColumn":24},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","replacedBy":"94"},{"ruleId":"82","replacedBy":"95"},{"ruleId":"84","replacedBy":"96"},{"ruleId":"86","severity":1,"message":"97","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"98","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":16},{"ruleId":"86","severity":1,"message":"99","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":23},{"ruleId":"86","severity":1,"message":"100","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":20},{"ruleId":"86","severity":1,"message":"101","line":9,"column":8,"nodeType":"88","messageId":"89","endLine":9,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":100,"column":29,"nodeType":"92","endLine":100,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":119,"column":37,"nodeType":"92","endLine":125,"endColumn":39},{"ruleId":"82","replacedBy":"104"},{"ruleId":"84","replacedBy":"105"},{"ruleId":"102","severity":1,"message":"103","line":173,"column":29,"nodeType":"92","endLine":173,"endColumn":33},{"ruleId":"86","severity":1,"message":"106","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":4,"column":5,"nodeType":"109","messageId":"110","endLine":6,"endColumn":6},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'queryString' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["111"],["112"],["111"],["112"],"'Component' is defined but never used.","'Playlist' is defined but never used.","'PlaylistCounter' is defined but never used.","'HoursCounter' is defined but never used.","'Filter' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["111"],["112"],"'Fragment' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]